{"version":3,"sources":["components/List.js","components/ListsList.js","components/ListsPage.js","actions/lists.js","components/MyTopTens.js","components/NotFound.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["ISPUBLIC_VALUES","List","props","id","concat","list","value","is_public","react_default","a","createElement","className","title","description","onChange","e","target","onIsPublicChange","map","key","onClick","onDeleteList","ListsList","lists","components_List","ListsPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTitleChange","setState","onDescriptionChange","onCreateList","preventDefault","state","resetForm","toggleForm","showNewCardForm","components_ListsList","console","log","isLoading","onSubmit","type","placeholder","renderListsList","Component","fetchLists","dispatch","fetch","headers","Content-Type","then","res","json","fetchListsSucceeded","payload","createList","body","JSON","stringify","method","createListSucceeded","deleteList","getState","deleteListSucceeded","setListIsPublic","_ref","setListIsPublicSucceeded","_ref2","MyTopTens","components_ListsPage","connect","_state$lists","NotFound","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","updeep","require","initialState","isloading","arguments","length","undefined","action","_loop","i","v","newArray","toConsumableArray","splice","_ret","updateIn","store","createStore","listsReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_1","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kqBAMMA,EAAkB,CACvB,UACA,UAoCcC,EAjCF,SAAAC,GACZ,IAAIC,EAAE,UAAAC,OAAWF,EAAMG,KAAKF,IACxBG,EAAQJ,EAAMG,KAAKE,UAAY,SAAW,UAE9C,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WAAMR,EAAMG,KAAKO,QAElBJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaT,EAAMG,KAAKQ,aACvCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UAAQJ,MAAOA,EAAOQ,SAUzB,SAA0BC,GAEzB,IAAMT,EAA2B,WAAnBS,EAAEC,OAAOV,MACvBJ,EAAMe,iBAAiB,CAAEd,GAAMD,EAAMG,KAAKF,GAAII,UAAaD,KAbPH,GAAIA,GACpDH,EAAgBkB,IAAI,SAAAX,GAAS,OAC7BC,EAAAC,EAAAC,cAAA,UAAQS,IAAKZ,EAAWD,MAAOC,GAAYA,OAI9CC,EAAAC,EAAAC,cAAA,UAAQU,QAUV,SAAsBL,GACrBb,EAAMmB,aAAanB,EAAMG,KAAKF,MAX7B,YCNYmB,EAlBG,SAAApB,GACjB,OACCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,2BAEAR,EAAMqB,MAAML,IAAI,SAAAb,GAAI,OACpBG,EAAAC,EAAAC,cAACc,EAAD,CACCL,IAAKd,EAAKF,GACVE,KAAMA,EACNY,iBAAkBf,EAAMe,iBACxBI,aAAcnB,EAAMmB,mBC4FVI,cAtGd,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAClBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3B,KASP+B,cAAgB,SAAClB,GAChBW,EAAKQ,SAAS,CAAEtB,MAASG,EAAEC,OAAOV,SAXhBoB,EAcnBS,oBAAsB,SAACpB,GACtBW,EAAKQ,SAAS,CAAErB,YAAeE,EAAEC,OAAOV,SAftBoB,EA0BnBU,aAAe,SAACrB,GACfA,EAAEsB,iBACFX,EAAKxB,MAAMkC,aAAa,CACvBxB,MAASc,EAAKY,MAAM1B,MACpBC,YAAea,EAAKY,MAAMzB,cAE3Ba,EAAKa,aAhCab,EAmCnBL,aAAe,SAAClB,GACfuB,EAAKxB,MAAMmB,aAAalB,IApCNuB,EAuCnBc,WAAa,WACZd,EAAKQ,SAAS,CAAEO,iBAAoBf,EAAKY,MAAMG,mBArC/Cf,EAAKY,MAAQ,CACZG,iBAAmB,EACnB7B,MAAS,GACTC,YAAe,IANEa,2EAmBlBG,KAAKK,SAAS,CACbO,iBAAmB,EACnB7B,MAAS,GACTC,YAAe,+CAqBC,IACTU,EAAUM,KAAK3B,MAAfqB,MACR,OAAOf,EAAAC,EAAAC,cAACgC,EAAD,CACNnB,MAAOA,EACPN,iBAAkBY,KAAK3B,MAAMe,iBAC7BI,aAAcQ,KAAK3B,MAAMmB,gDAM1B,OADAsB,QAAQC,IAAI,cAAef,KAAK3B,OAC5B2B,KAAK3B,MAAM2C,UAEbrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,cAMDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,UACCC,UAAU,wBACVS,QAASS,KAAKW,YAFf,eAMAX,KAAKS,MAAMG,iBACXjC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBmC,SAAUjB,KAAKO,cAChD5B,EAAAC,EAAAC,cAAA,SACCC,UAAU,mBACVG,SAAUe,KAAKI,cACf3B,MAAOuB,KAAKS,MAAM1B,MAClBmC,KAAK,OACLC,YAAY,UAEbxC,EAAAC,EAAAC,cAAA,SACCC,UAAU,mBACVG,SAAUe,KAAKM,oBACf7B,MAAOuB,KAAKS,MAAMzB,YAClBkC,KAAK,OACLC,YAAY,gBAEbxC,EAAAC,EAAAC,cAAA,UACCC,UAAU,SACVoC,KAAK,UAFN,SAQFvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbkB,KAAKoB,2BAhGaC,aCCjB,IAAMC,EAAa,WACzB,OAAO,SAAAC,GACNA,EAPM,CACNL,KAAQ,wBASR,OAAOM,MAAM,cAAe,CAAEC,QADhB,CAAEC,eAAgB,sBAE9BC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAjC,GAAK,OAAI6B,EAASO,EAAoBpC,QAIxC,SAASoC,EAAoBpC,GACnC,MAAO,CACNwB,KAAQ,wBACRa,QAAW,CACVrC,UAKI,IAAMsC,EAAa,SAACxD,GAC1B,OAAO,SAAA+C,GACN,IACIU,EAAOC,KAAKC,UAAU3D,GAC1B,OAAOgD,MAAM,cAAe,CAAEC,QAFhB,CAAEC,eAAgB,oBAEOU,OAAU,OAAQH,SACvDN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAnD,GACL+C,EAASc,EAAoB7D,QAK1B,SAAS6D,EAAoB7D,GACnC,MAAO,CACN0C,KAAQ,wBACRa,QAAW,CACVvD,SAKI,IAAM8D,EAAa,SAAChE,GAC1B,OAAO,SAACiD,EAAUgB,GAGjB,OAAOf,MAAK,cAAAjD,OAAeD,EAAf,KAAsB,CAAEmD,QAFtB,CAAEC,eAAgB,oBAEaU,OAAU,WACrDT,KAAK,SAAAC,GACLL,EAASiB,EAAoBlE,QAK1B,SAASkE,EAAoBlE,GACnC,MAAO,CACN4C,KAAQ,wBACRa,QAAW,CACVzD,OAKI,IAAMmE,EAAkB,SAAAC,GAAuB,IAApBpE,EAAoBoE,EAApBpE,GAAII,EAAgBgE,EAAhBhE,UACrC,OAAO,SAAC6C,EAAUgB,GACjB,IACIN,EAAOC,KAAKC,UAAU,CAAEzD,cAE5B,OAAO8C,MAAK,cAAAjD,OAAeD,EAAf,KAAsB,CAAEmD,QAHtB,CAAEC,eAAgB,oBAGaU,OAAU,QAASH,SAC9DN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACLL,EAASoB,EAAyBf,QAK/B,SAASe,EAATC,GAAqD,IAAjBtE,EAAiBsE,EAAjBtE,GAAII,EAAakE,EAAblE,UAE9C,OADAoC,QAAQC,IAAI,aAAcrC,GACnB,CACNwC,KAAQ,+BACRa,QAAW,CACVzD,GAAMA,EACNI,kBChFGmE,6MAKLtC,aAAe,SAAAmC,GAA4B,IAAzB3D,EAAyB2D,EAAzB3D,MAAOC,EAAkB0D,EAAlB1D,YACxBa,EAAKxB,MAAMkD,SAAS7B,EAAMsC,WAAW,CAAEjD,QAAOC,oBAG/CI,iBAAmB,SAAAwD,GAAuB,IAApBtE,EAAoBsE,EAApBtE,GAAII,EAAgBkE,EAAhBlE,UACzBmB,EAAKxB,MAAMkD,SAAS7B,EAAM+C,gBAAgB,CAAEnE,KAAII,kBAGjDc,aAAgB,SAAClB,GAChBuB,EAAKxB,MAAMkD,SAAS7B,EAAM4C,WAAWhE,wFAZrC0B,KAAK3B,MAAMkD,SAAS7B,EAAM4B,+CAiB1B,OADAR,QAAQC,IAAI,8BAA+Bf,KAAK3B,MAAM2C,WAErDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAACiE,EAAD,CACCpD,MAAOM,KAAK3B,MAAMqB,MAClBa,aAAcP,KAAKO,aACnBnB,iBAAkBY,KAAKZ,iBACvBI,aAAcQ,KAAKR,aACnBwB,UAAWhB,KAAK3B,MAAM2C,oBA1BHK,aA2CT0B,kBAVf,SAAyBtC,GAAO,IAAAuC,EAEFvC,EAAMf,MACnC,MAAO,CACNA,MAJ8BsD,EAEvBtD,MAGPsB,UAL8BgC,EAEhBhC,YAQD+B,CAAyBF,GCrCzBI,EATE,WAChB,OACCtE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wDCaYqE,kMAXb,OACCvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACCxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACCzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjClE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOG,UAAWP,aANL5B,cCKEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFClBFC,EAASC,EAAQ,KAEfC,EAAe,CACpBtE,MAAS,GACTuE,WAAa,GAGC,SAASvE,IAAoC,IAA9Be,EAA8ByD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAcK,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAOnD,MACd,IAAK,sBACJ,OAAO4C,EAAO,CAAE9C,WAAa,GAAQP,GAGtC,IAAK,wBAKJ,OAAOqD,EAAO,CAAEpE,MAJhB,WACC,MAAO,GAAGnB,OAAO8F,EAAOtC,QAAQrC,QAGEsB,WAAa,GAASP,GAG1D,IAAK,wBAKJ,OAAOqD,EAAO,CAAEpE,MAJhB,SAAiBA,GAChB,MAAO,GAAGnB,OAAOmB,EAAO2E,EAAOtC,QAAQvD,QAGJiC,GAGrC,IAAK,wBACJ,IAD6B,IAAA6D,EAAA,SACpBC,GACR,GAAI9D,EAAMf,MAAM6E,GAAGjG,KAAO+F,EAAOtC,QAAQzD,GAAI,CAS5C,OAAAkG,EAAOV,EAAO,CAAEpE,MANhB,SAAoBA,GACnB,IAAI+E,EAAQ3E,OAAA4E,EAAA,EAAA5E,CAAOJ,GAEnB,OADA+E,EAASE,OAAOJ,EAAG,GACZE,IAG+BhE,MAVhC8D,EAAE,EAAGA,EAAG9D,EAAMf,MAAMyE,OAAQI,IAAK,KAAAK,EAAAN,EAAjCC,GAAiC,qBAAAK,EAAA,OAAAA,EAAAJ,EAa1C,OAAO/D,EAGR,IAAK,+BAGJ,IAAS8D,EAAE,EAAGA,EAAE9D,EAAMf,MAAMyE,OAAQI,IACnC,GAAI9D,EAAMf,MAAM6E,GAAGjG,KAAO+F,EAAOtC,QAAQzD,GACxC,OAAOwF,EAAOe,SAAP,SAAAtG,OAAyBgG,EAAzB,cAAwCF,EAAOtC,QAAQrD,UAAW+B,GAG3E,OAAOA,EAGR,QACC,OAAOA,eCvCJqE,EAAQC,sBANM,WAAwB,IAAvBtE,EAAuByD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,MAAO,CACN1E,MAASsF,EAAavE,EAAMf,MAAO2E,KAIEY,8BACtCC,0BAAgBC,OAKjBC,IAASC,OACR1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAUR,MAAOA,GAChBnG,EAAAC,EAAAC,cAAC0G,EAAD,OAEDC,SAASC,eAAe,SFoGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC","file":"static/js/main.18454e57.chunk.js","sourcesContent":["// An individual list\n\nimport React from 'react';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nconst ISPUBLIC_VALUES = [\n\t'Private',\n\t'Public',\n];\n\nconst List = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\treturn (\n\t\t<div className=\"list\">\n\t\t\t<div className=\"list-header\">\n\t\t\t\t<div>{props.list.title}</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<select value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t{ISPUBLIC_VALUES.map(is_public => (\n\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<button onClick={onDeleteList}>delete</button>\n\t\t</div>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList(props.list.id);\n\t}\n};\n\nexport default List;\n","// List of all lists\n\nimport React from 'react';\nimport List from './List';\n\nconst ListsList = props => {\n\treturn (\n\t\t<div className=\"lists-list\">\n\t\t\t<div className=\"lists-list-title\">\n\t\t\t\t<strong>My lists</strong>\n\t\t\t</div>\n\t\t\t{props.lists.map(list => (\n\t\t\t\t<List\n\t\t\t\t\tkey={list.id}\n\t\t\t\t\tlist={list}\n\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\tonDeleteList={props.onDeleteList}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ListsList;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport ListsList from './ListsList';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showNewCardForm': false,\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t};\n\t}\n\n\tonTitleChange = (e) => {\n\t\tthis.setState({ 'title': e.target.value });\n\t}\n\n\tonDescriptionChange = (e) => {\n\t\tthis.setState({ 'description': e.target.value });\n\t}\n\n\tresetForm() {\n\t\tthis.setState({\n\t\t\t'showNewCardForm': false,\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t});\n\t}\n\n\tonCreateList = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onCreateList({\n\t\t\t'title': this.state.title,\n\t\t\t'description': this.state.description\n\t\t});\n\t\tthis.resetForm();\n\t}\n\n\tonDeleteList = (id) => {\n\t\tthis.props.onDeleteList(id);\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewCardForm': !this.state.showNewCardForm });\n\t}\n\n\trenderListsList() {\n\t\tconst { lists } = this.props;\n\t\treturn <ListsList\n\t\t\tlists={lists}\n\t\t\tonIsPublicChange={this.props.onIsPublicChange}\n\t\t\tonDeleteList={this.props.onDeleteList}\n\t\t/>;\n\t}\n\n\trender() {\n\t\tconsole.log('this.props ', this.props);\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button button-default\"\n\t\t\t\t\t\tonClick={this.toggleForm}\n\t\t\t\t\t>\n\t\t\t\t\t+ New list</button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.showNewCardForm && (\n\t\t\t\t\t<form className=\"lists-list-form\" onSubmit={this.onCreateList}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\tonChange={this.onTitleChange}\n\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"title\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{this.renderListsList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ListsPage;\n","function fetchListsStarted() {\n\treturn {\n\t\t'type': 'FETCH_LISTS_STARTED'\n\t};\n}\n\nexport const fetchLists = () => {\n\treturn dispatch => {\n\t\tdispatch(fetchListsStarted());\n\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\t\treturn fetch('/api/lists/', { headers, })\n\t\t\t.then(res => res.json())\n\t\t\t.then(lists => dispatch(fetchListsSucceeded(lists)));\n\t};\n};\n\nexport function fetchListsSucceeded(lists) {\n\treturn {\n\t\t'type': 'FETCH_LISTS_SUCCEEDED',\n\t\t'payload': {\n\t\t\tlists\n\t\t}\n\t};\n}\n\nexport const createList = (list) => {\n\treturn dispatch => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\t\tlet body = JSON.stringify(list);\n\t\treturn fetch('/api/lists/', { headers, 'method': 'POST', body })\n\t\t\t.then(res => res.json())\n\t\t\t.then(list => {\n\t\t\t\tdispatch(createListSucceeded(list));\n\t\t\t});\n\t};\n};\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': 'CREATE_LIST_SUCCEEDED',\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\nexport const deleteList = (id) => {\n\treturn (dispatch, getState) => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\n\t\treturn fetch(`/api/lists/${id}/`, { headers, 'method': 'DELETE' })\n\t\t\t.then(res => {\n\t\t\t\tdispatch(deleteListSucceeded(id));\n\t\t\t});\n\t};\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': 'DELETE_LIST_SUCCEEDED',\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => {\n\treturn (dispatch, getState) => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\t\tlet body = JSON.stringify({ is_public });\n\n\t\treturn fetch(`/api/lists/${id}/`, { headers, 'method': 'PATCH', body })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => { // res is the entire updated list object\n\t\t\t\tdispatch(setListIsPublicSucceeded(res));\n\t\t\t});\n\t};\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\tconsole.log('is_public ', is_public);\n\treturn {\n\t\t'type': 'SET_LIST_IS_PUBLIC_SUCCEEDED',\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\nimport { lists } from '../actions/index.js';\n\n\nclass MyTopTens extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tonCreateList = ({ title, description }) => {\n\t\tthis.props.dispatch(lists.createList({ title, description }));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList =  (id) => {\n\t\tthis.props.dispatch(lists.deleteList(id));\n\t}\n\n\trender() {\n\t\tconsole.log('MyTopTens. props.isLoading ', this.props.isLoading);\n\t\treturn (\n\t\t\t<div className=\"main-content\">\n\t\t\t\t<ListsPage\n\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\t// return state.lists; // this seems to work and is much simpler. I'm not sure why this isn't the recommended form?\n\tconst { lists, isLoading } = state.lists;\n\treturn {\n\t\tlists,\n\t\tisLoading\n\t\t// 'lists': state.lists.lists\n\t};\n}\n\nexport default connect(mapStateToProps)(MyTopTens);\n","import React from 'react';\n\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Not Found</h2>\n\t\t\t<p>The page you're looking for is not found.</p>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport MyTopTens from './components/MyTopTens';\nimport NotFound from './components/NotFound';\nimport './App.css';\nimport './App.scss';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={MyTopTens} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t </BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var updeep = require('updeep');\n\nconst initialState = {\n\t'lists': [],\n\t'isloading': false\n};\n\nexport default function lists(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'FETCH_LISTS_STARTED': {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase 'FETCH_LISTS_SUCCEEDED': {\n\t\t\tfunction addLists() {\n\t\t\t\treturn [].concat(action.payload.lists);\n\t\t\t}\n\n\t\t\treturn updeep({ 'lists': addLists, 'isLoading': false }, state); // updeep calls  addList with the lists object as argument. This appends action.payload to an empty array, replacing any previous lists\n\t\t}\n\n\t\tcase 'CREATE_LIST_SUCCEEDED': {\n\t\t\tfunction addList(lists) {\n\t\t\t\treturn [].concat(lists, action.payload.list);\n\t\t\t}\n\n\t\t\treturn updeep({ 'lists': addList }, state); // updeep calls  addList with the lists object as argument. So this appends action.payload to state.lists.\n\t\t}\n\n\t\tcase 'DELETE_LIST_SUCCEEDED': {\n\t\t\tfor (let i=0; i< state.lists.length; i++) {\n\t\t\t\tif (state.lists[i].id === action.payload.id) {\n\t\t\t\t\t// we need to use a function to act on the array\n\t\t\t\t\t// you cannot splice from the lists array directly because it is sealed\n\t\t\t\t\tfunction deleteList(lists) {\n\t\t\t\t\t\tlet newArray = [...lists];\n\t\t\t\t\t\tnewArray.splice(i, 1);\n\t\t\t\t\t\treturn newArray;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn updeep({ 'lists': deleteList }, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state; // if deleted list is not found, there is nothing to do\n\t\t}\n\n\t\tcase 'SET_LIST_IS_PUBLIC_SUCCEEDED': {\n\t\t\t// map would carry on after the index is found\n\t\t\t// and as we need index, the for loop is simper\n\t\t\tfor (let i=0; i<state.lists.length; i++) {\n\t\t\t\tif (state.lists[i].id === action.payload.id) {\n\t\t\t\t\treturn updeep.updateIn(`lists.${i}.is_public`, action.payload.is_public, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state; // in case list was not found\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport listsReducer from './reducers';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = (state = {}, action) => {\n\treturn {\n\t\t'lists': listsReducer(state.lists, action)\n\t};\n};\n\nconst store = createStore(rootReducer, composeWithDevTools(\n\tapplyMiddleware(thunk)\n\t// applyMiddleware(...middleware),\n\t// other store enhancers if any\n));\n\nReactDOM.render (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nif (module.hot) {\n\tmodule.hot.accept('./App', () => {\n\t\tconst NextApp = require('./App').default;\n\t\tReactDOM.render(\n\t\t\t<Provider store={store}><NextApp /></Provider>,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t});\n\n\tmodule.hot.accept('./reducers', () => {\n\t\tconst nextRootReducer = require('./reducers').default;\n\t\tstore.replaceReducer(nextRootReducer);\n\t});\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// basic recommended for React apps. Don't know if it should be enabled.\n/*\nif (module.hot) {\n\tmodule.hot.accept();\n} */\n"],"sourceRoot":""}