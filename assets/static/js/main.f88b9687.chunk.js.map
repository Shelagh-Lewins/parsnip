{"version":3,"sources":["constants/index.js","components/List.js","components/ListsList.js","components/ListsPage.js","actions/lists.js","components/FlashMessage.js","reducers/index.js","components/MyTopTens.js","components/NotFound.js","App.js","serviceWorker.js","sagas.js","index.js"],"names":["LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","List","props","id","concat","list","value","is_public","react_default","a","createElement","className","title","description","onChange","e","target","onIsPublicChange","map","key","timer","onClick","onDeleteList","ListsList","index","indexOf","headerText","lists","components_List","ListsPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearch","onTitleChange","setState","onDescriptionChange","onCreateList","preventDefault","state","resetForm","toggleForm","showNewCardForm","_this$props","keys","listsByIsPublic","components_ListsList","isLoading","type","placeholder","onSubmit","renderListsList","Component","fetchLists","filterLists","searchTerm","payload","createList","dispatch","body","JSON","stringify","fetch","headers","Content-Type","method","then","res","json","createListSucceeded","deleteList","getState","deleteListSucceeded","setListIsPublic","_ref","setListIsPublicSucceeded","publicTimerStop","_ref2","FlashMessage","message","Error","defaultProps","updeep","require","initialState","isloading","error","getFilteredLists","createSelector","filter","match","RegExp","getGroupedAndFilteredLists","grouped","forEach","arguments","length","undefined","action","findIndex","newArray","toConsumableArray","splice","updateIn","i","MyTopTens","components_ListsPage","connect","_state$lists","NotFound","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","rootSaga","takeLatestById","handlePublicTimer","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","actionType","saga","channelsMap","_context2","take","sent","channel","put","_marked2","_context3","t0","_marked3","_context4","delay","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","listsReducer","composeWithDevTools","applyMiddleware","thunk","run","ReactDOM","render","es","src_App_1","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"isBAAaA,EAAwB,EAAC,GAAO,GAChCC,EAAuB,CAAC,UAAW,UCyCjCC,EAlCF,SAAAC,GACZ,IAAIC,EAAE,UAAAC,OAAWF,EAAMG,KAAKF,IACxBG,EAAQJ,EAAMG,KAAKE,UAAY,SAAW,UAE9C,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WAAMR,EAAMG,KAAKO,QAElBJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaT,EAAMG,KAAKQ,aACvCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UAAQJ,MAAOA,EAAOQ,SAWzB,SAA0BC,GAEzB,IAAMT,EAA2B,WAAnBS,EAAEC,OAAOV,MACvBJ,EAAMe,iBAAiB,CAAEd,GAAMD,EAAMG,KAAKF,GAAII,UAAaD,KAdPH,GAAIA,GACpDH,EAAqBkB,IAAI,SAAAX,GAAS,OAClCC,EAAAC,EAAAC,cAAA,UAAQS,IAAKZ,EAAWD,MAAOC,GAAYA,OAI9CC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcT,EAAMG,KAAKe,MAAxC,KACAZ,EAAAC,EAAAC,cAAA,UAAQW,QAUV,SAAsBN,GACrBb,EAAMoB,aAAapB,EAAMG,KAAKF,MAX7B,YCEYoB,EArBG,SAAArB,GACjB,IAAMsB,EAAQzB,EAAsB0B,QAA4B,SAApBvB,EAAMK,WAC5CmB,EAAa1B,EAAqBwB,GAExC,OACChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,cAASgB,IAETxB,EAAMyB,MAAMT,IAAI,SAAAb,GAAI,OACpBG,EAAAC,EAAAC,cAACkB,EAAD,CACCT,IAAKd,EAAKF,GACVE,KAAMA,EACNY,iBAAkBf,EAAMe,iBACxBK,aAAcpB,EAAMoB,mBCuGVO,cAvHd,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAClBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM/B,KASPmC,SAAW,SAAAtB,GACVe,EAAK5B,MAAMmC,SAAStB,EAAEC,OAAOV,QAXXwB,EAcnBQ,cAAgB,SAACvB,GAChBe,EAAKS,SAAS,CAAE3B,MAASG,EAAEC,OAAOV,SAfhBwB,EAkBnBU,oBAAsB,SAACzB,GACtBe,EAAKS,SAAS,CAAE1B,YAAeE,EAAEC,OAAOV,SAnBtBwB,EA8BnBW,aAAe,SAAC1B,GACfA,EAAE2B,iBACFZ,EAAK5B,MAAMuC,aAAa,CACvB7B,MAASkB,EAAKa,MAAM/B,MACpBC,YAAeiB,EAAKa,MAAM9B,cAE3BiB,EAAKc,aApCad,EAuCnBR,aAAe,SAACnB,GACf2B,EAAK5B,MAAMoB,aAAanB,IAxCN2B,EA2CnBe,WAAa,WACZf,EAAKS,SAAS,CAAEO,iBAAoBhB,EAAKa,MAAMG,mBAzC/ChB,EAAKa,MAAQ,CACZG,iBAAmB,EACnBlC,MAAS,GACTC,YAAe,IANEiB,2EAuBlBG,KAAKM,SAAS,CACbO,iBAAmB,EACnBlC,MAAS,GACTC,YAAe,+CAqBC,IAAAkC,EACiCd,KAAK/B,MAA/CyB,EADSoB,EACTpB,MAAOV,EADE8B,EACF9B,iBAAkBK,EADhByB,EACgBzB,aAEjC,OAAOS,OAAOiB,KAAKrB,GAAOT,IAAI,SAAAX,GAC7B,IAAM0C,EAAkBtB,EAAMpB,GAE9B,OACCC,EAAAC,EAAAC,cAACwC,EAAD,CACCvB,MAAOsB,EACPhC,iBAAkBA,EAClBK,aAAcA,EACdf,UAAWA,EACXY,IAAKZ,uCAOR,OAAI0B,KAAK/B,MAAMiD,UAEb3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,cAMDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,SACCI,SAAUmB,KAAKI,SACfe,KAAK,OACLC,YAAY,cAEb7C,EAAAC,EAAAC,cAAA,UACCC,UAAU,wBACVU,QAASY,KAAKY,YAFf,eAMAZ,KAAKU,MAAMG,iBACXtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkB2C,SAAUrB,KAAKQ,cAChDjC,EAAAC,EAAAC,cAAA,SACCC,UAAU,mBACVG,SAAUmB,KAAKK,cACfhC,MAAO2B,KAAKU,MAAM/B,MAClBwC,KAAK,OACLC,YAAY,UAEb7C,EAAAC,EAAAC,cAAA,SACCC,UAAU,mBACVG,SAAUmB,KAAKO,oBACflC,MAAO2B,KAAKU,MAAM9B,YAClBuC,KAAK,OACLC,YAAY,gBAEb7C,EAAAC,EAAAC,cAAA,UACCC,UAAU,SACVyC,KAAK,UAFN,SAQF5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbsB,KAAKsB,2BAjHaC,aCJjB,SAASC,IACf,MAAO,CACNL,KAAQ,uBAIH,SAASM,EAAYC,GAC3B,MAAO,CACNP,KAAQ,eACRQ,QAAW,CAAED,eAIR,IAAME,EAAa,SAACxD,GAC1B,OAAO,SAAAyD,GACN,IACIC,EAAOC,KAAKC,UAAU5D,GAC1B,OAAO6D,MAAM,cAAe,CAAEC,QAFhB,CAAEC,eAAgB,oBAEOC,OAAU,OAAQN,SACvDO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAjE,GACLyD,EAASW,EAAoBpE,QAK1B,SAASoE,EAAoBpE,GACnC,MAAO,CACN+C,KAAQ,wBACRQ,QAAW,CACVvD,SAKI,IAAMqE,EAAa,SAACvE,GAC1B,OAAO,SAAC2D,EAAUa,GAGjB,OAAOT,MAAK,cAAA9D,OAAeD,EAAf,KAAsB,CAAEgE,QAFtB,CAAEC,eAAgB,oBAEaC,OAAU,WACrDC,KAAK,SAAAC,GACLT,EAASc,EAAoBzE,QAK1B,SAASyE,EAAoBzE,GACnC,MAAO,CACNiD,KAAQ,wBACRQ,QAAW,CACVzD,OAKI,IAAM0E,EAAkB,SAAAC,GAAuB,IAApB3E,EAAoB2E,EAApB3E,GAAII,EAAgBuE,EAAhBvE,UACrC,OAAO,SAACuD,EAAUa,GACjB,IACIZ,EAAOC,KAAKC,UAAU,CAAE1D,cAE5B,OAAO2D,MAAK,cAAA9D,OAAeD,EAAf,KAAsB,CAAEgE,QAHtB,CAAEC,eAAgB,oBAGaC,OAAU,QAASN,SAC9DO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACLT,EAASiB,EAAyBR,IAE9BA,EAAIhE,UACPuD,EAmBG,CACNV,KAAQ,cACRQ,QAAW,CAAEzD,GArBgBoE,EAAIpE,MAE9B2D,EAuBL,SAAyB3D,GACxB,MAAO,CACNiD,KAAQ,aACRQ,QAAW,CAAEzD,OA1BD6E,CAAgBT,EAAIpE,SAM3B,SAAS4E,EAATE,GACN,MAAO,CACN7B,KAAQ,+BACRQ,QAAW,CACVzD,GAJyD8E,EAAjB9E,GAKxCI,UALyD0E,EAAb1E,YCxEhC,SAAS2E,EAAahF,GACpC,OACCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbT,EAAMiF,SAKVC,MAAMC,aAAe,CACpBF,QAAW,0CCRRG,EAASC,EAAQ,KAEfC,EAAe,CACpB7D,MAAS,GACT8D,WAAa,EACbC,MAAS,KACT/B,WAAc,IAMFgC,EAAmBC,YAC/B,CAJgB,SAAAjD,GAAK,OAAIA,EAAMhB,MAAMA,OAChB,SAAAgB,GAAK,OAAIA,EAAMhB,MAAMgC,aAI1C,SAAChC,EAAOgC,GACP,OAAOhC,EAAMkE,OAAO,SAAAxF,GAEnB,MAAmB,KAAfsD,EACItD,EAEDA,EAAKO,MAAMkF,MAAM,IAAIC,OAAOpC,EAAY,UAKrCqC,EAA6BJ,YACzC,CAACD,GACD,SAAAhE,GACC,IAAMsE,EAAU,GAMhB,OAJAlG,EAAsBmG,QAAQ,SAAA3F,GAC7B0F,EAAQ1F,GAAaoB,EAAMkE,OAAO,SAAAxF,GAAI,OAAIA,EAAKE,YAAcA,MAGvD0F,IAIM,SAAStE,IAAoC,IAA9BgB,EAA8BwD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBX,EAAcc,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAOlD,MACd,IAAK,sBACJ,OAAOkC,EAAO,CAAEnC,WAAa,GAAQR,GAGtC,IAAK,qBACJ,OAAO2C,EAAO,CAAEnC,WAAa,EAAOuC,MAASY,EAAO1C,QAAQ8B,OAAS/C,GAGtE,IAAK,wBAKJ,OAAO2C,EAAO,CAAE3D,MAJhB,WACC,MAAO,GAAGvB,OAAOkG,EAAO1C,QAAQjC,QAGEwB,WAAa,GAASR,GAG1D,IAAK,eACJ,OAAO2C,EAAO,CAAE3B,WAAc2C,EAAO1C,QAAQD,YAAchB,GAG5D,IAAK,wBAKJ,OAAO2C,EAAO,CAAE3D,MAJhB,SAAiBA,GAChB,MAAO,GAAGvB,OAAOuB,EAAO2E,EAAO1C,QAAQvD,QAGJsC,GAGrC,IAAK,wBACJ,IAAMnB,EAAQmB,EAAMhB,MAAM4E,UAAU,SAAClG,GAAD,OAAUA,EAAKF,KAAOmG,EAAO1C,QAAQzD,KACzE,IAAe,IAAXqB,EAAc,CAOjB,OAAO8D,EAAO,CAAE3D,MANhB,SAAoBA,GACnB,IAAI6E,EAAQzE,OAAA0E,EAAA,EAAA1E,CAAOJ,GAEnB,OADA6E,EAASE,OAAOlF,EAAO,GAChBgF,IAG+B7D,GAGxC,OAAOA,EAGR,IAAK,+BACJ,IAAMnB,EAAQmB,EAAMhB,MAAM4E,UAAU,SAAClG,GAAD,OAAUA,EAAKF,KAAOmG,EAAO1C,QAAQzD,KAEzE,OAAe,IAAXqB,EACI8D,EAAOqB,SAAP,SAAAvG,OAAyBoB,EAAzB,cAA4C8E,EAAO1C,QAAQrD,UAAWoC,GAGvEA,EAGR,IAAK,kBACJ,IAAK,IAAIiE,EAAE,EAAGA,EAAEjE,EAAMhB,MAAMyE,OAAQQ,IACnC,GAAIjE,EAAMhB,MAAMiF,GAAGzG,KAAOmG,EAAO1C,QAAQzD,GACxC,OAAOmF,EAAOqB,SAAP,SAAAvG,OAAyBwG,EAAzB,UAAoCjE,EAAMhB,MAAMiF,GAAGxF,MAAQ,EAAGuB,GAGvE,OAAOA,EAGR,QACC,OAAOA,OClGJkE,6MAKLxE,SAAW,SAAAsB,GACV7B,EAAK5B,MAAM4D,SAASnC,EAAM+B,YAAYC,OAGvClB,aAAe,SAAAqC,GAA4B,IAAzBlE,EAAyBkE,EAAzBlE,MAAOC,EAAkBiE,EAAlBjE,YACxBiB,EAAK5B,MAAM4D,SAASnC,EAAMkC,WAAW,CAAEjD,QAAOC,oBAG/CI,iBAAmB,SAAAgE,GAAuB,IAApB9E,EAAoB8E,EAApB9E,GAAII,EAAgB0E,EAAhB1E,UACzBuB,EAAK5B,MAAM4D,SAASnC,EAAMkD,gBAAgB,CAAE1E,KAAII,kBAGjDe,aAAgB,SAACnB,GAChB2B,EAAK5B,MAAM4D,SAASnC,EAAM+C,WAAWvE,wFAhBrC8B,KAAK/B,MAAM4D,SAASnC,EAAM8B,+CAoB1B,OACCjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbsB,KAAK/B,MAAMwF,OACXlF,EAAAC,EAAAC,cAACwE,EAAD,CAAcC,QAASlD,KAAK/B,MAAMwF,QACnClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAACoG,EAAD,CACCnF,MAAOM,KAAK/B,MAAMyB,MAClBU,SAAUJ,KAAKI,SACfI,aAAcR,KAAKQ,aACnBxB,iBAAkBgB,KAAKhB,iBACvBK,aAAcW,KAAKX,aACnB6B,UAAWlB,KAAK/B,MAAMiD,qBAjCJK,aAmDTuD,kBAVf,SAAyBpE,GAAO,IAAAqE,EACFrE,EAAMhB,MAA3BwB,EADuB6D,EACvB7D,UAAWuC,EADYsB,EACZtB,MAEnB,MAAO,CACN/D,MAASqE,EAA2BrD,GACpCQ,YACAuC,UAIaqB,CAAyBF,GC/CzBI,EATE,WAChB,OACCzG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wDCaYwG,kMAXb,OACC1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACC3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACC5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjCrG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOG,UAAWP,aANLzD,cCKEiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,oICfmB+B,cAMfC,eAgBArE,eAkBAsE,IAxCK,SAAUF,IAAV,OAAAG,EAAAvH,EAAAwH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,OADcF,EAAAE,KAAA,EACRC,YAAW,sBAAuB5E,IAD1B,OAEd,OAFcyE,EAAAE,KAAA,EAERN,GAAe,CAAC,cAAe,cAAeC,IAFtC,wBAAAG,EAAAI,SAAAC,EAAAtG,MAMf,SAAU6F,GAAeU,EAAYC,GAArC,IAAAC,EAAApC,EAAAnG,EAAA,OAAA6H,EAAAvH,EAAAwH,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACOM,EAAc,GADrB,OAIiB,OAJjBC,EAAAP,KAAA,EAIuBQ,YAAKJ,GAJ5B,UAIQlC,EAJRqC,EAAAE,KAKU1I,EAAOmG,EAAO1C,QAAdzD,GAEHuI,EAAYvI,GAPnB,CAAAwI,EAAAP,KAAA,SASG,OADAM,EAAYvI,GAAM2I,cARrBH,EAAAP,KAAA,GASSC,YAAWK,EAAYvI,GAAKsI,GATrC,QAYE,OAZFE,EAAAP,KAAA,GAYQW,YAAIL,EAAYvI,GAAKmG,GAZ7B,QAAAqC,EAAAP,KAAA,iCAAAO,EAAAL,SAAAU,EAAA/G,MAgBA,SAAUwB,KAAV,IAAAU,EAAAI,EAAA,OAAAyD,EAAAvH,EAAAwH,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAGc,OAFTjE,EAAU,CAAEC,eAAgB,oBADjC6E,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAGoBlE,MAAM,cAAe,CAAEC,YACvCG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAJpB,OAME,OAHMD,EAHR0E,EAAAJ,KAAAI,EAAAb,KAAA,EAMQW,YAAI,CACT3F,KAAQ,wBACRQ,QAAW,CAAEjC,MAAS4C,KARzB,OAAA0E,EAAAb,KAAA,gBAWE,OAXFa,EAAAd,KAAA,EAAAc,EAAAC,GAAAD,EAAA,SAAAA,EAAAb,KAAA,GAWQW,YAAI,CACT3F,KAAQ,qBACRQ,QAAW,CAAE8B,MAASuD,EAAAC,GAAE/D,WAb3B,yBAAA8D,EAAAX,SAAAa,EAAAlH,KAAA,SAkBA,SAAU8F,GAAVjD,GAAA,IAAAlB,EAAA,OAAAoE,EAAAvH,EAAAwH,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UAA8BxE,EAA9BkB,EAA8BlB,QAChB,gBADdkB,EAAuC1B,KAAvC,CAAAgG,EAAAhB,KAAA,eAGG,OAHHgB,EAAAhB,KAAA,EAGShG,YAAKiH,IAAO,KAHrB,OAIG,OAJHD,EAAAhB,KAAA,EAISW,YAAI,CACT3F,KAAQ,kBACRQ,QAAW,CAAEzD,GAAMyD,EAAQzD,MAN/B,OAAAiJ,EAAAhB,KAAA,gCAAAgB,EAAAd,SAAAgB,EAAArH,MC5BA,IAMMsH,GAAiBC,cAEjBC,GAAQC,sBARM,WAAwB,IAAvB/G,EAAuBwD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,MAAO,CACN1E,MAASgI,EAAahH,EAAMhB,MAAO2E,KAMEsD,8BACtCC,0BAAgBC,IAAOP,MAGxBA,GAAeQ,IAAIlC,GAEnBmC,IAASC,OACRzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAUT,MAAOA,IAChBjJ,EAAAC,EAAAC,cAACyJ,EAAD,OAEDC,SAASC,eAAe,SFgGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlG,KAAK,SAAAmG,GACjCA,EAAaC","file":"static/js/main.f88b9687.chunk.js","sourcesContent":["export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\n","// An individual list\n\nimport React from 'react';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst List = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\treturn (\n\t\t<div className=\"list\">\n\t\t\t<div className=\"list-header\">\n\t\t\t\t<div>{props.list.title}</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<select value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className=\"list-timer\">{props.list.timer}s</div>\n\t\t\t<button onClick={onDeleteList}>delete</button>\n\t\t</div>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList(props.list.id);\n\t}\n};\n\nexport default List;\n","// List of all lists\n\nimport React from 'react';\nimport List from './List';\n\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst ListsList = props => {\n\tconst index = LIST_IS_PUBLIC_VALUES.indexOf(props.is_public === 'true');\n\tconst headerText = LIST_IS_PUBLIC_TEXTS[index];\n\n\treturn (\n\t\t<div className=\"lists-list\">\n\t\t\t<div className=\"lists-list-title\">\n\t\t\t\t<strong>{headerText}</strong>\n\t\t\t</div>\n\t\t\t{props.lists.map(list => (\n\t\t\t\t<List\n\t\t\t\t\tkey={list.id}\n\t\t\t\t\tlist={list}\n\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\tonDeleteList={props.onDeleteList}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ListsList;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport ListsList from './ListsList';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showNewCardForm': false,\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t};\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonTitleChange = (e) => {\n\t\tthis.setState({ 'title': e.target.value });\n\t}\n\n\tonDescriptionChange = (e) => {\n\t\tthis.setState({ 'description': e.target.value });\n\t}\n\n\tresetForm() {\n\t\tthis.setState({\n\t\t\t'showNewCardForm': false,\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t});\n\t}\n\n\tonCreateList = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onCreateList({\n\t\t\t'title': this.state.title,\n\t\t\t'description': this.state.description\n\t\t});\n\t\tthis.resetForm();\n\t}\n\n\tonDeleteList = (id) => {\n\t\tthis.props.onDeleteList(id);\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewCardForm': !this.state.showNewCardForm });\n\t}\n\n\trenderListsList() {\n\t\tconst { lists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(lists).map(is_public => {\n\t\t\tconst listsByIsPublic = lists[is_public];\n\n\t\t\treturn (\n\t\t\t\t<ListsList\n\t\t\t\t\tlists={listsByIsPublic}\n\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\tis_public={is_public}\n\t\t\t\t\tkey={is_public}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button button-default\"\n\t\t\t\t\t\tonClick={this.toggleForm}\n\t\t\t\t\t>\n\t\t\t\t\t+ New list</button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.showNewCardForm && (\n\t\t\t\t\t<form className=\"lists-list-form\" onSubmit={this.onCreateList}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\tonChange={this.onTitleChange}\n\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"title\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{this.renderListsList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ListsPage;\n","// function fetchListsStarted() {\nexport function fetchLists() {\n\treturn {\n\t\t'type': 'FETCH_LISTS_STARTED'\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': 'FILTER_LISTS',\n\t\t'payload': { searchTerm },\n\t};\n}\n\nexport const createList = (list) => {\n\treturn dispatch => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\t\tlet body = JSON.stringify(list);\n\t\treturn fetch('/api/lists/', { headers, 'method': 'POST', body })\n\t\t\t.then(res => res.json())\n\t\t\t.then(list => {\n\t\t\t\tdispatch(createListSucceeded(list));\n\t\t\t});\n\t};\n};\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': 'CREATE_LIST_SUCCEEDED',\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\nexport const deleteList = (id) => {\n\treturn (dispatch, getState) => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\n\t\treturn fetch(`/api/lists/${id}/`, { headers, 'method': 'DELETE' })\n\t\t\t.then(res => {\n\t\t\t\tdispatch(deleteListSucceeded(id));\n\t\t\t});\n\t};\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': 'DELETE_LIST_SUCCEEDED',\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => {\n\treturn (dispatch, getState) => {\n\t\tlet headers = { 'Content-Type': 'application/json' };\n\t\tlet body = JSON.stringify({ is_public });\n\n\t\treturn fetch(`/api/lists/${id}/`, { headers, 'method': 'PATCH', body })\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => { // res is the entire updated list object\n\t\t\t\tdispatch(setListIsPublicSucceeded(res));\n\n\t\t\t\tif (res.is_public) {\n\t\t\t\t\tdispatch(publicTimerStart(res.id));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(publicTimerStop(res.id));\n\t\t\t\t}\n\t\t\t});\n\t};\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': 'SET_LIST_IS_PUBLIC_SUCCEEDED',\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\nfunction publicTimerStart(id) {\n\treturn {\n\t\t'type': 'TIMER_START',\n\t\t'payload': { id },\n\t};\n}\n\nfunction publicTimerStop(id) {\n\treturn {\n\t\t'type': 'TIMER_STOP',\n\t\t'payload': { id },\n\t};\n}\n","import React from 'react';\n\nexport default function FlashMessage(props) {\n\treturn (\n\t\t<div className=\"flash-error\">\n\t\t\t{props.message}\n\t\t</div>\n\t);\n}\n\nError.defaultProps = {\n\t'message': 'An error occurred',\n};\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'lists': [],\n\t'isloading': false,\n\t'error': null,\n\t'searchTerm': '',\n};\n\nconst getLists = state => state.lists.lists;\nconst getSearchTerm = state => state.lists.searchTerm;\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.title.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport default function lists(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'FETCH_LISTS_STARTED': {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase 'FETCH_LISTS_FAILED': {\n\t\t\treturn updeep({ 'isLoading': false, 'error': action.payload.error }, state);\n\t\t}\n\n\t\tcase 'FETCH_LISTS_SUCCEEDED': {\n\t\t\tfunction addLists() {\n\t\t\t\treturn [].concat(action.payload.lists);\n\t\t\t}\n\n\t\t\treturn updeep({ 'lists': addLists, 'isLoading': false }, state); // updeep calls  addList with the lists object as argument. This appends action.payload to an empty array, replacing any previous lists\n\t\t}\n\n\t\tcase 'FILTER_LISTS': {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tcase 'CREATE_LIST_SUCCEEDED': {\n\t\t\tfunction addList(lists) {\n\t\t\t\treturn [].concat(lists, action.payload.list);\n\t\t\t}\n\n\t\t\treturn updeep({ 'lists': addList }, state); // updeep calls  addList with the lists object as argument. So this appends action.payload to state.lists.\n\t\t}\n\n\t\tcase 'DELETE_LIST_SUCCEEDED': {\n\t\t\tconst index = state.lists.findIndex((list) => list.id === action.payload.id);\n\t\t\tif (index !== -1) {\n\t\t\t\tfunction deleteList(lists) {\n\t\t\t\t\tlet newArray = [...lists];\n\t\t\t\t\tnewArray.splice(index, 1);\n\t\t\t\t\treturn newArray;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn updeep({ 'lists': deleteList }, state);\n\t\t\t}\n\n\t\t\treturn state; // in case list was not found\n\t\t}\n\n\t\tcase 'SET_LIST_IS_PUBLIC_SUCCEEDED': {\n\t\t\tconst index = state.lists.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`lists.${index}.is_public`, action.payload.is_public, state);\n\t\t\t}\n\n\t\t\treturn state; // in case list was not found\n\t\t}\n\n\t\tcase 'TIMER_INCREMENT': {\n\t\t\tfor (let i=0; i<state.lists.length; i++) {\n\t\t\t\tif (state.lists[i].id === action.payload.id) {\n\t\t\t\t\treturn updeep.updateIn(`lists.${i}.timer`, state.lists[i].timer + 1, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state; // in case list was not found\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\nimport { lists } from '../actions/index.js';\nimport FlashMessage from './FlashMessage';\nimport { getGroupedAndFilteredLists } from '../reducers';\n\n\nclass MyTopTens extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonCreateList = ({ title, description }) => {\n\t\tthis.props.dispatch(lists.createList({ title, description }));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList =  (id) => {\n\t\tthis.props.dispatch(lists.deleteList(id));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{this.props.error &&\n\t\t\t\t\t<FlashMessage message={this.props.error} />}\n\t\t\t\t<div className=\"main-content\">\n\t\t\t\t\t<ListsPage\n\t\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\tconst { isLoading, error } = state.lists;\n\n\treturn {\n\t\t'lists': getGroupedAndFilteredLists(state),\n\t\tisLoading,\n\t\terror,\n\t};\n}\n\nexport default connect(mapStateToProps)(MyTopTens);\n","import React from 'react';\n\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Not Found</h2>\n\t\t\t<p>The page you're looking for is not found.</p>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport MyTopTens from './components/MyTopTens';\nimport NotFound from './components/NotFound';\nimport './App.css';\nimport './App.scss';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={MyTopTens} />\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t </BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { channel, delay } from 'redux-saga';\nimport { call, put, take, takeLatest } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n\tyield takeLatest('FETCH_LISTS_STARTED', fetchLists);\n\tyield takeLatestById(['TIMER_START', 'TIMER_STOP'], handlePublicTimer);\n}\n\n\nfunction* takeLatestById(actionType, saga) {\n\tconst channelsMap = {};\n\n\twhile (true) {\n\t\tconst action = yield take(actionType);\n\t\tconst { id } = action.payload;\n\n\t\tif (!channelsMap[id]) {\n\t\t\tchannelsMap[id] = channel();\n\t\t\tyield takeLatest(channelsMap[id], saga);\n\t\t}\n\n\t\tyield put(channelsMap[id], action);\n\t}\n}\n\nfunction* fetchLists() {\n\tlet headers = { 'Content-Type': 'application/json' };\n\ttry {\n\t\tconst res = yield fetch('/api/lists/', { headers, })\n\t\t\t.then(res => res.json());\n\n\t\tyield put({\n\t\t\t'type': 'FETCH_LISTS_SUCCEEDED',\n\t\t\t'payload': { 'lists': res }\n\t\t});\n\t} catch (e) {\n\t\tyield put({\n\t\t\t'type': 'FETCH_LISTS_FAILED',\n\t\t\t'payload': { 'error': e.message }\n\t\t});\n\t}\n}\n\nfunction* handlePublicTimer({ payload, type }) {\n\tif (type === 'TIMER_START') {\n\t\twhile (true) {\n\t\t\tyield call(delay, 1000);\n\t\t\tyield put({\n\t\t\t\t'type': 'TIMER_INCREMENT',\n\t\t\t\t'payload': { 'id': payload.id },\n\t\t\t});\n\t\t}\n\t}\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport listsReducer from './reducers';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst rootReducer = (state = {}, action) => {\n\treturn {\n\t\t'lists': listsReducer(state.lists, action)\n\t};\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(\n\tapplyMiddleware(thunk, sagaMiddleware)\n));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nif (module.hot) {\n\tmodule.hot.accept('./App', () => {\n\t\tconst NextApp = require('./App').default;\n\t\tReactDOM.render(\n\t\t\t<Provider store={store}><NextApp /></Provider>,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t});\n\n\tmodule.hot.accept('./reducers', () => {\n\t\tconst nextRootReducer = require('./reducers').default;\n\t\tstore.replaceReducer(nextRootReducer);\n\t});\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// basic recommended for React apps. Don't know if it should be enabled.\n/*\nif (module.hot) {\n\tmodule.hot.accept();\n} */\n"],"sourceRoot":""}